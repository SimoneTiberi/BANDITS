// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Rcpp_Together
Rcpp::List Rcpp_Together(unsigned int& R, unsigned int const& burn_in, unsigned int const& N_1, unsigned int const& N_2, Rcpp::ListOf<Rcpp::NumericMatrix>& pi_new_A, Rcpp::ListOf<Rcpp::NumericMatrix>& pi_new_B, Rcpp::ListOf<Rcpp::NumericMatrix>& mcmc_alpha_A, Rcpp::ListOf<Rcpp::NumericMatrix>& mcmc_alpha_B, Rcpp::ListOf<Rcpp::NumericVector>& log_alpha_new_A, Rcpp::ListOf<Rcpp::NumericVector>& log_alpha_new_B, Rcpp::ListOf<Rcpp::NumericMatrix>& chol_A, Rcpp::ListOf<Rcpp::NumericMatrix>& chol_B, double const& mean_log_delta, double const& sd_log_delta, Rcpp::IntegerVector const& K, Rcpp::NumericVector const& l, Rcpp::IntegerMatrix const& f, Rcpp::IntegerMatrix const& exon_id, Rcpp::LogicalVector const& One_transcript, Rcpp::LogicalVector const& one_transcript);
RcppExport SEXP _BANDITS_Rcpp_Together(SEXP RSEXP, SEXP burn_inSEXP, SEXP N_1SEXP, SEXP N_2SEXP, SEXP pi_new_ASEXP, SEXP pi_new_BSEXP, SEXP mcmc_alpha_ASEXP, SEXP mcmc_alpha_BSEXP, SEXP log_alpha_new_ASEXP, SEXP log_alpha_new_BSEXP, SEXP chol_ASEXP, SEXP chol_BSEXP, SEXP mean_log_deltaSEXP, SEXP sd_log_deltaSEXP, SEXP KSEXP, SEXP lSEXP, SEXP fSEXP, SEXP exon_idSEXP, SEXP One_transcriptSEXP, SEXP one_transcriptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int& >::type R(RSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type N_1(N_1SEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type N_2(N_2SEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type pi_new_A(pi_new_ASEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type pi_new_B(pi_new_BSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type mcmc_alpha_A(mcmc_alpha_ASEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type mcmc_alpha_B(mcmc_alpha_BSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericVector>& >::type log_alpha_new_A(log_alpha_new_ASEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericVector>& >::type log_alpha_new_B(log_alpha_new_BSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type chol_A(chol_ASEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type chol_B(chol_BSEXP);
    Rcpp::traits::input_parameter< double const& >::type mean_log_delta(mean_log_deltaSEXP);
    Rcpp::traits::input_parameter< double const& >::type sd_log_delta(sd_log_deltaSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector const& >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type l(lSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix const& >::type f(fSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix const& >::type exon_id(exon_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector const& >::type One_transcript(One_transcriptSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector const& >::type one_transcript(one_transcriptSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_Together(R, burn_in, N_1, N_2, pi_new_A, pi_new_B, mcmc_alpha_A, mcmc_alpha_B, log_alpha_new_A, log_alpha_new_B, chol_A, chol_B, mean_log_delta, sd_log_delta, K, l, f, exon_id, One_transcript, one_transcript));
    return rcpp_result_gen;
END_RCPP
}
// Rcpp_FULL_Together_Multigroup
Rcpp::List Rcpp_FULL_Together_Multigroup(unsigned int& R, unsigned int const& burn_in, Rcpp::IntegerVector const& N, unsigned int const& N_groups, double const& mean_log_delta, double const& sd_log_delta, Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericMatrix>>& pi_new, Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericMatrix>>& mcmc_alpha, Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericVector>>& alpha_new, Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericMatrix>>& chol, Rcpp::ListOf<Rcpp::NumericMatrix> TOT_Y_new, Rcpp::ListOf<Rcpp::NumericMatrix> precision, Rcpp::IntegerVector const& K, Rcpp::NumericVector const& l, Rcpp::ListOf<Rcpp::IntegerMatrix> const& f, Rcpp::IntegerMatrix const& exon_id, Rcpp::LogicalVector const& One_transcript, Rcpp::LogicalVector const& one_transcript);
RcppExport SEXP _BANDITS_Rcpp_FULL_Together_Multigroup(SEXP RSEXP, SEXP burn_inSEXP, SEXP NSEXP, SEXP N_groupsSEXP, SEXP mean_log_deltaSEXP, SEXP sd_log_deltaSEXP, SEXP pi_newSEXP, SEXP mcmc_alphaSEXP, SEXP alpha_newSEXP, SEXP cholSEXP, SEXP TOT_Y_newSEXP, SEXP precisionSEXP, SEXP KSEXP, SEXP lSEXP, SEXP fSEXP, SEXP exon_idSEXP, SEXP One_transcriptSEXP, SEXP one_transcriptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int& >::type R(RSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector const& >::type N(NSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type N_groups(N_groupsSEXP);
    Rcpp::traits::input_parameter< double const& >::type mean_log_delta(mean_log_deltaSEXP);
    Rcpp::traits::input_parameter< double const& >::type sd_log_delta(sd_log_deltaSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericMatrix>>& >::type pi_new(pi_newSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericMatrix>>& >::type mcmc_alpha(mcmc_alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericVector>>& >::type alpha_new(alpha_newSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::ListOf<Rcpp::NumericMatrix>>& >::type chol(cholSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix> >::type TOT_Y_new(TOT_Y_newSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix> >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector const& >::type K(KSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type l(lSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::IntegerMatrix> const& >::type f(fSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix const& >::type exon_id(exon_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector const& >::type One_transcript(One_transcriptSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector const& >::type one_transcript(one_transcriptSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_FULL_Together_Multigroup(R, burn_in, N, N_groups, mean_log_delta, sd_log_delta, pi_new, mcmc_alpha, alpha_new, chol, TOT_Y_new, precision, K, l, f, exon_id, One_transcript, one_transcript));
    return rcpp_result_gen;
END_RCPP
}
// Rcpp_Unique
Rcpp::List Rcpp_Unique(unsigned int const& K, unsigned int& R, unsigned int const& burn_in, unsigned int const& N_1, unsigned int const& N_2, double const& mean_log_delta, double const& sd_log_delta, Rcpp::NumericVector const& l, Rcpp::IntegerMatrix const& f, Rcpp::IntegerMatrix const& exon_id, Rcpp::LogicalVector const& one_transcript);
RcppExport SEXP _BANDITS_Rcpp_Unique(SEXP KSEXP, SEXP RSEXP, SEXP burn_inSEXP, SEXP N_1SEXP, SEXP N_2SEXP, SEXP mean_log_deltaSEXP, SEXP sd_log_deltaSEXP, SEXP lSEXP, SEXP fSEXP, SEXP exon_idSEXP, SEXP one_transcriptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int const& >::type K(KSEXP);
    Rcpp::traits::input_parameter< unsigned int& >::type R(RSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type N_1(N_1SEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type N_2(N_2SEXP);
    Rcpp::traits::input_parameter< double const& >::type mean_log_delta(mean_log_deltaSEXP);
    Rcpp::traits::input_parameter< double const& >::type sd_log_delta(sd_log_deltaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type l(lSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix const& >::type f(fSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix const& >::type exon_id(exon_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector const& >::type one_transcript(one_transcriptSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_Unique(K, R, burn_in, N_1, N_2, mean_log_delta, sd_log_delta, l, f, exon_id, one_transcript));
    return rcpp_result_gen;
END_RCPP
}
// Rcpp_FULL_Unique_Multigroup
Rcpp::List Rcpp_FULL_Unique_Multigroup(unsigned int const& K, unsigned int& R, unsigned int const& burn_in, Rcpp::IntegerVector const& N, unsigned int const& N_groups, double const& mean_log_delta, double const& sd_log_delta, Rcpp::ListOf<Rcpp::NumericMatrix>& pi_new, Rcpp::ListOf<Rcpp::NumericMatrix>& mcmc_alpha, Rcpp::ListOf<Rcpp::NumericVector>& alpha_new, Rcpp::ListOf<Rcpp::NumericMatrix>& chol, Rcpp::NumericVector const& l, Rcpp::ListOf<Rcpp::IntegerMatrix> const& f, Rcpp::IntegerMatrix const& exon_id, Rcpp::LogicalVector const& one_transcript);
RcppExport SEXP _BANDITS_Rcpp_FULL_Unique_Multigroup(SEXP KSEXP, SEXP RSEXP, SEXP burn_inSEXP, SEXP NSEXP, SEXP N_groupsSEXP, SEXP mean_log_deltaSEXP, SEXP sd_log_deltaSEXP, SEXP pi_newSEXP, SEXP mcmc_alphaSEXP, SEXP alpha_newSEXP, SEXP cholSEXP, SEXP lSEXP, SEXP fSEXP, SEXP exon_idSEXP, SEXP one_transcriptSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int const& >::type K(KSEXP);
    Rcpp::traits::input_parameter< unsigned int& >::type R(RSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type burn_in(burn_inSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector const& >::type N(NSEXP);
    Rcpp::traits::input_parameter< unsigned int const& >::type N_groups(N_groupsSEXP);
    Rcpp::traits::input_parameter< double const& >::type mean_log_delta(mean_log_deltaSEXP);
    Rcpp::traits::input_parameter< double const& >::type sd_log_delta(sd_log_deltaSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type pi_new(pi_newSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type mcmc_alpha(mcmc_alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericVector>& >::type alpha_new(alpha_newSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::NumericMatrix>& >::type chol(cholSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector const& >::type l(lSEXP);
    Rcpp::traits::input_parameter< Rcpp::ListOf<Rcpp::IntegerMatrix> const& >::type f(fSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix const& >::type exon_id(exon_idSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector const& >::type one_transcript(one_transcriptSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_FULL_Unique_Multigroup(K, R, burn_in, N, N_groups, mean_log_delta, sd_log_delta, pi_new, mcmc_alpha, alpha_new, chol, l, f, exon_id, one_transcript));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BANDITS_Rcpp_Together", (DL_FUNC) &_BANDITS_Rcpp_Together, 20},
    {"_BANDITS_Rcpp_FULL_Together_Multigroup", (DL_FUNC) &_BANDITS_Rcpp_FULL_Together_Multigroup, 18},
    {"_BANDITS_Rcpp_Unique", (DL_FUNC) &_BANDITS_Rcpp_Unique, 11},
    {"_BANDITS_Rcpp_FULL_Unique_Multigroup", (DL_FUNC) &_BANDITS_Rcpp_FULL_Unique_Multigroup, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_BANDITS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
